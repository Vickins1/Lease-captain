<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Subscription Payment</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="icon" href="/images/icon.png" type="image/png">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background: linear-gradient(135deg, #e0eafc, #cfdef3);
            color: #333;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding: 20px;
            overflow-x: hidden;
        }

        .container {
            background: #fff;
            max-width: 650px;
            width: 100%;
            padding: 2.5rem;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            border-top: 8px solid #1e3a8a;
            position: relative;
            overflow: hidden;
            animation: slideIn 0.5s ease-out;
        }

        @keyframes slideIn {
            from { transform: translateY(50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        h1 {
            color: #1e3a8a;
            font-size: 32px;
            font-weight: 700;
            margin-bottom: 1.5rem;
            text-align: center;
            letter-spacing: 1px;
        }

        p {
            font-size: 18px;
            color: #555;
            margin-bottom: 1.5rem;
            text-align: center;
        }

        form label {
            font-weight: 500;
            color: #333;
            margin-bottom: 0.5rem;
            text-align: left;
            display: block;
        }

        form select,
        form input[type="tel"] {
            width: 100%;
            padding: 12px;
            margin-bottom: 1.5rem;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s, box-shadow 0.3s;
            background: #f9fafb;
        }

        form select:focus,
        form input[type="tel"]:focus {
            border-color: #1e3a8a;
            box-shadow: 0 0 8px rgba(30, 58, 138, 0.2);
            outline: none;
        }

        form button {
            width: 100%;
            padding: 14px;
            background: linear-gradient(90deg, #1e3a8a, #3b82f6);
            color: white;
            font-weight: 600;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: transform 0.3s, background 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 16px;
        }

        form button:hover {
            background: linear-gradient(90deg, #1e40af, #2563eb);
            transform: translateY(-2px);
        }

        .paid-message {
            background: #d1fae5;
            color: #065f46;
            padding: 15px;
            border-radius: 8px;
            font-weight: 600;
            text-align: center;
            margin-top: 1.5rem;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        #amount-display,
        #units-display {
            font-weight: 600;
            color: #1e3a8a;
            transition: color 0.3s;
        }

        #loader-modal .modal-content {
            background: transparent;
            border: none;
            box-shadow: none;
        }

        .loader {
            border: 8px solid #f3f3f3;
            border-top: 8px solid #1e3a8a;
            border-radius: 50%;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        #payment-status-modal .modal-dialog {
            max-width: 400px;
        }

        #payment-status-modal .modal-content {
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            background: #fff;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }

        #payment-status-modal .modal-body {
            font-size: 18px;
            color: #333;
        }

        #payment-status-modal .status-icon {
            font-size: 50px;
            margin-bottom: 20px;
        }

        @media (max-width: 768px) {
            .container { padding: 2rem; }
            h1 { font-size: 28px; }
            p { font-size: 16px; }
            form select, form input[type="tel"], form button { font-size: 14px; padding: 10px; }
        }

        @media (max-width: 480px) {
            .container { padding: 1.5rem; }
            h1 { font-size: 24px; }
            p { font-size: 14px; }
            form select, form input[type="tel"], form button { font-size: 13px; padding: 8px; }
        }

        .floating-support {
            position: fixed;
            bottom: 25px;
            right: 25px;
            z-index: 1000;
        }

        .floating-support .btn {
            background: linear-gradient(90deg, #1e3a8a, #3b82f6);
            color: #fff;
            padding: 12px 20px;
            border-radius: 50px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .floating-support .btn:hover {
            transform: scale(1.1);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.4);
            background: linear-gradient(90deg, #1e40af, #2563eb);
        }
    </style>
</head>
<body>
    <div class="container">
        <h1><i class="fas fa-clipboard-list"></i> Subscribe to <span id="selected-plan"><%= plan %> (<%= billingPeriod %>)</span></h1>
        <p><i class="fas fa-money-bill-wave"></i> Amount due: <span id="amount-display">KES <%= expectedAmount %></span></p>
        <p><i class="fas fa-boxes"></i> <span id="units-display">Units included: <%= planDetails[plan][billingPeriod].units %></span></p>

        <% if (!hasPaid) { %>
            <form action="/subscription" method="POST" id="payment-form">
                <label for="plan-select"><i class="fas fa-list-alt"></i> Change Plan:</label>
                <select id="plan-select" name="plan" onchange="updatePlanDetails()">
                    <option value="Standard" <%= plan === 'Standard' ? 'selected' : '' %>>Standard</option>
                    <option value="Pro" <%= plan === 'Pro' ? 'selected' : '' %>>Pro</option>
                    <option value="Advanced" <%= plan === 'Advanced' ? 'selected' : '' %>>Advanced</option>
                    <option value="Enterprise" <%= plan === 'Enterprise' ? 'selected' : '' %>>Enterprise</option>
                    <option value="Premium" <%= plan === 'Premium' ? 'selected' : '' %>>Premium</option>
                </select>

                <label for="billing-period-select"><i class="fas fa-calendar-alt"></i> Billing Period:</label>
                <select id="billing-period-select" name="billingPeriod" onchange="updatePlanDetails()">
                    <option value="monthly" <%= billingPeriod === 'monthly' ? 'selected' : '' %>>Monthly</option>
                    <option value="yearly" <%= billingPeriod === 'yearly' ? 'selected' : '' %>>Yearly (20% off)</option>
                </select>

                <label for="msisdn"><i class="fas fa-phone-alt"></i> Enter Phone Number:</label>
                <input type="tel" name="msisdn" required placeholder="079450..." pattern="[0-9]{10}" title="Enter a valid 10-digit phone number">

                <input type="hidden" name="amount" id="amount-field" value="<%= expectedAmount %>">

                <button type="submit" id="payButton" onclick="handlePaymentClick(event)">
                    <i class="fas fa-paper-plane"></i> Pay Now via M-PESA
                </button>
            </form>
        <% } else { %>
            <p class="paid-message"><i class="fas fa-check-circle"></i> You have already paid for this subscription.</p>
        <% } %>
    </div>

    <!-- Loader Modal -->
    <div class="modal fade" id="loader-modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="loader"></div>
                    <p class="mt-3 text-center" id="loader-text">Initiating Payment...</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Payment Status Modal -->
    <div class="modal fade" id="payment-status-modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div id="payment-status-text">
                        <i class="fas fa-spinner fa-spin text-primary status-icon"></i><br>
                        <span id="status-message">Checking Payment Status...</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Floating Support Button -->
    <div class="floating-support">
        <button type="button" class="btn d-flex align-items-center" data-toggle="modal" data-target="#supportModal">
            <i class="fas fa-headset mr-2"></i> Support
        </button>
    </div>


<!-- Support Modal -->
<div class="modal fade" id="supportModal" tabindex="-1" role="dialog" aria-labelledby="supportModalLabel" aria-hidden="true">
       <div class="modal-dialog modal-dialog-centered" role="document">
           <div class="modal-content">
               <div class="modal-header" style="background: linear-gradient(90deg, #003366, #0066cc); color: #fff;">
                   <h5 class="modal-title" id="supportModalLabel">Contact Support</h5>
                   <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="color: #fff;">
                       <span aria-hidden="true">×</span>
                   </button>
               </div>
               <div class="modal-body">
                   <form id="supportForm" action="/support/submit" method="POST">
                       <div class="form-group">
                           <label for="name" class="form-label"><i class="fas fa-user mr-1"></i> Your Name</label>
                           <input type="text" class="form-control" name="name" id="name" placeholder="Enter your full name" required>
                       </div>
                       <div class="form-group">
                           <label for="email" class="form-label"><i class="fas fa-envelope mr-1"></i> Your Email</label>
                           <input type="email" class="form-control" name="email" id="email" placeholder="Enter your email" required>
                       </div>
                       <div class="form-group">
                           <label for="number" class="form-label"><i class="fas fa-phone mr-1"></i> Phone Number</label>
                           <input type="tel" class="form-control" name="number" id="number" placeholder="e.g., 0768123456" pattern="[0-9]{7,15}" title="Enter a valid phone number (7-15 digits, no + prefix)" required>
                       </div>
                       <div class="form-group">
                           <label for="address" class="form-label"><i class="fas fa-map-marker-alt mr-1"></i> Address</label>
                           <input type="text" class="form-control" name="address" id="address" placeholder="Enter your address" required>
                       </div>
                       <div class="form-group">
                           <label for="reviewcheck" class="form-label">
                               <svg class="professional-tick mr-1" width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                   <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z" fill="#003366"/>
                               </svg>
                               Review Check
                           </label>
                           <div class="custom-checkbox">
                               <input type="checkbox" name="reviewcheck" id="reviewcheck" value="on" required>
                               <label for="reviewcheck" class="checkbox-label">
                                   <svg class="tick-icon" width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                       <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z" fill="#ffffff"/>
                                   </svg>
                               </label>
                           </div>
                       </div>
                       <div class="form-group">
                           <label for="message" class="form-label"><i class="fas fa-comment mr-1"></i> Message</label>
                           <textarea class="form-control" name="message" id="message" rows="4" placeholder="Write your message here..." required></textarea>
                       </div>
                       <button type="submit" class="btn-submit" id="sendMessageButton">
                           <i class="fas fa-paper-plane mr-2"></i> Send Message
                       </button>
                   </form>
               </div>
           </div>
       </div>
   </div>
   
   <!-- Updated JavaScript -->
   <script>
       function handleSendMessageClick(event) {
           event.preventDefault();
           const form = document.getElementById('supportForm');
           const button = document.getElementById('sendMessageButton');
   
           // Basic client-side validation
           const requiredFields = ['name', 'email', 'number', 'address', 'message', 'reviewcheck'];
           let isValid = true;
   
           requiredFields.forEach(field => {
               const input = document.getElementById(field);
               if (field === 'reviewcheck') {
                   if (!input.checked) {
                       isValid = false;
                       input.nextElementSibling.style.borderColor = '#dc3545'; // Highlight checkbox
                   } else {
                       input.nextElementSibling.style.borderColor = '#003366';
                   }
               } else if (!input.value.trim()) {
                   isValid = false;
                   input.style.borderColor = '#dc3545';
               } else {
                   input.style.borderColor = '#ccc';
               }
           });
   
           if (isValid) {
               button.disabled = true;
               button.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Sending...';
               form.submit();
           } else {
               alert('Please fill in all required fields and check the Review Check box.');
           }
       }
   
       document.getElementById('sendMessageButton').addEventListener('click', handleSendMessageClick);
   </script>
   
   <!-- Inline CSS for Consistency (Add this to your existing <style> block if not already present) -->
   <style>
       .form-label {
           font-weight: 600;
           color: #003366;
           margin-bottom: 5px;
           font-size: 0.9rem;
           display: block;
       }
   
       .form-control {
           width: 100%;
           padding: 10px;
           border: 1px solid #ccc;
           border-radius: 5px;
           box-sizing: border-box;
           font-size: 0.9rem;
           transition: border-color 0.3s, box-shadow 0.3s;
       }
   
       .form-control:focus {
           outline: none;
           border-color: #003366;
           box-shadow: 0 0 5px rgba(0, 51, 102, 0.3);
       }
   
       .btn-submit {
           background: linear-gradient(90deg, #003366, #0066cc);
           color: white;
           border: none;
           padding: 12px;
           width: 100%;
           border-radius: 25px;
           font-weight: 600;
           cursor: pointer;
           text-align: center;
           font-size: 0.9rem;
           transition: all 0.3s ease;
       }
   
       .btn-submit:hover {
           background: linear-gradient(90deg, #005bb5, #0088ff);
           transform: translateY(-2px);
       }
   
       .btn-submit:disabled {
           background: #6c757d;
           cursor: not-allowed;
           transform: none;
       }
   </style>
   
   <!-- Updated JavaScript for Form Submission Feedback -->
   <script>
       function handleSendMessageClick(event) {
           event.preventDefault();
           const form = document.getElementById('supportForm');
           const button = document.getElementById('sendMessageButton');
           
           // Basic client-side validation
           const requiredFields = ['name', 'emailAddress', 'number', 'address', 'reviewcheck', 'supportMessage'];
           let isValid = true;
   
           requiredFields.forEach(field => {
               const input = document.getElementById(field);
               if (!input.value.trim()) {
                   isValid = false;
                   input.style.borderColor = '#dc3545';
               } else {
                   input.style.borderColor = '#ccc';
               }
           });
   
           if (isValid) {
               button.disabled = true;
               button.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Sending...';
               form.submit(); // Submit the form if all fields are valid
           } else {
               alert('Please fill in all required fields.');
           }
       }
   </script>


    <!-- Inject planDetails and messages via hidden elements with EJS -->
    <div id="data-container" style="display: none;">
        <input type="hidden" id="plan-details" value='<%- JSON.stringify(planDetails) %>'>
        <input type="hidden" id="messages-success" value='<%- JSON.stringify(messages.success || []) %>'>
        <input type="hidden" id="messages-error" value='<%- JSON.stringify(messages.error || []) %>'>
        <input type="hidden" id="messages-info" value='<%- JSON.stringify(messages.info || []) %>'>
    </div>

    <script type="text/javascript">
        // Safely parse injected data
        let planDetails, messages;
        try {
            planDetails = JSON.parse(document.getElementById("plan-details").value || '{}');
            messages = {
                success: JSON.parse(document.getElementById("messages-success").value || '[]'),
                error: JSON.parse(document.getElementById("messages-error").value || '[]'),
                info: JSON.parse(document.getElementById("messages-info").value || '[]')
            };
        } catch (e) {
            console.error('Failed to parse plan details or messages:', e);
            planDetails = {};
            messages = { success: [], error: [], info: [] };
        }

        function updatePlanDetails() {
            const planSelect = document.getElementById("plan-select");
            const billingPeriodSelect = document.getElementById("billing-period-select");
            const amountField = document.getElementById("amount-field");
            const payButton = document.getElementById("payButton");

            if (!planSelect || !billingPeriodSelect || !amountField || !payButton) {
                console.error('Missing required DOM elements for plan details.');
                return;
            }

            const selectedPlan = planSelect.value;
            const selectedBillingPeriod = billingPeriodSelect.value;

            const planData = planDetails[selectedPlan]?.[selectedBillingPeriod] || { amount: null, units: 0 };
            const { amount, units } = planData;

            amountField.value = amount || "";
            document.getElementById("amount-display").textContent = amount ? `KES ${amount}` : "Contact Support for Pricing";
            document.getElementById("units-display").textContent = `Units included: ${units}`;
            document.getElementById("amount-display").style.color = amount ? "#1e3a8a" : "#dc2626";
            document.getElementById("selected-plan").textContent = `${selectedPlan} (${selectedBillingPeriod})`;
            payButton.disabled = !amount;
        }

        window.onload = () => {
            updatePlanDetails();

            if (typeof toastr !== 'undefined') {
                toastr.options = {
                    closeButton: true,
                    progressBar: true,
                    positionClass: "toast-top-right",
                    timeOut: "5000"
                };
                if (messages.success.length > 0) toastr.success(messages.success[0]);
                if (messages.error.length > 0) toastr.error(messages.error[0]);
                if (messages.info.length > 0) toastr.info(messages.info[0]);
            } else {
                console.warn('Toastr library not loaded.');
            }

            const planSelect = document.getElementById("plan-select");
            const billingPeriodSelect = document.getElementById("billing-period-select");
            if (planSelect && billingPeriodSelect) {
                planSelect.addEventListener('change', updatePlanDetails);
                billingPeriodSelect.addEventListener('change', updatePlanDetails);
            }
        };

        function handlePaymentClick(event) {
            event.preventDefault();

            const payButton = document.getElementById("payButton");
            const form = document.getElementById("payment-form");
            const msisdnInput = form.querySelector('input[name="msisdn"]');
            const amountField = document.getElementById("amount-field");

            if (!payButton || !form || !msisdnInput || !amountField) {
                toastr.error('Internal error. Please refresh the page.');
                return;
            }

            const phoneRegex = /^\d{10}$/;
            if (!phoneRegex.test(msisdnInput.value)) {
                toastr.error('Please enter a valid 10-digit phone number.');
                return;
            }

            const amount = parseFloat(amountField.value);
            if (isNaN(amount) || amount <= 0) {
                toastr.error('Please select a valid plan with an amount.');
                return;
            }

            payButton.disabled = true;
            payButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';
            $('#loader-modal').modal({ backdrop: 'static', keyboard: false });

            $.ajax({
                url: '/subscription',
                method: 'POST',
                data: $(form).serialize(),
                success: function(response) {
                    if (response.transactionId) {
                        $('#loader-modal').modal('hide');
                        $('#payment-status-modal').modal({ backdrop: 'static', keyboard: false });
                        startPaymentStatusStream(response.transactionId);
                    } else {
                        resetPaymentUI();
                        toastr.error(response.message || 'Failed to initiate payment.');
                    }
                },
                error: function(xhr) {
                    resetPaymentUI();
                    toastr.error(xhr.responseJSON?.message || 'Failed to initiate payment.');
                }
            });
        }

        function startPaymentStatusStream(transactionId) {
            const eventSource = new EventSource(`/payment-status-stream?transactionId=${transactionId}`);
            const statusText = document.getElementById("payment-status-text");

            eventSource.onmessage = function(event) {
                const data = JSON.parse(event.data);
                console.log('SSE Data:', data);

                if (!statusText) return;

                switch (data.status) {
                    case 'pending':
                        statusText.innerHTML = `
                            <i class="fas fa-spinner fa-spin text-primary status-icon"></i><br>
                            <span id="status-message">Payment request initiated successfully! Please enter your Mpesa PIN...</span>`;
                        break;
                    case 'completed':
                        statusText.innerHTML = `
                            <i class="fas fa-check-circle text-success status-icon"></i><br>
                            <span id="status-message">${data.message || 'Payment completed!'}</span>`;
                        setTimeout(() => {
                            resetPaymentUI();
                            window.location.href = data.redirect || '/tenancy-manager/dashboard';
                        }, 2000);
                        eventSource.close();
                        break;
                    case 'failed':
                        statusText.innerHTML = `
                            <i class="fas fa-exclamation-circle text-danger status-icon"></i><br>
                            <span id="status-message">${data.message || 'Payment failed.'}</span>`;
                        setTimeout(() => {
                            resetPaymentUI();
                            window.location.href = data.redirect || '/subscription';
                        }, 2000);
                        eventSource.close();
                        break;
                    case 'timeout':
                        statusText.innerHTML = `
                            <i class="fas fa-clock text-warning status-icon"></i><br>
                            <span id="status-message">${data.message || 'Payment verification timed out.'}</span>`;
                        setTimeout(() => {
                            resetPaymentUI();
                            window.location.href = data.redirect || '/subscription';
                        }, 2000);
                        eventSource.close();
                        break;
                }
            };

            eventSource.onerror = function() {
                statusText.innerHTML = `
                    <i class="fas fa-exclamation-circle text-danger status-icon"></i><br>
                    <span id="status-message">Connection lost. Please try again.</span>`;
                setTimeout(() => {
                    resetPaymentUI();
                    window.location.href = '/subscription';
                }, 2000);
                eventSource.close();
            };
        }

        function resetPaymentUI() {
            $('#loader-modal').modal('hide');
            $('#payment-status-modal').modal('hide');
            const payButton = document.getElementById("payButton");
            if (payButton) {
                payButton.disabled = false;
                payButton.innerHTML = '<i class="fas fa-paper-plane"></i> Pay Now via M-PESA';
            }
        }

        function handleSendMessageClick(event) {
            event.preventDefault();
            const sendMessageButton = document.getElementById("sendMessageButton");
            const form = document.getElementById("supportForm");

            if (!sendMessageButton || !form) {
                console.error('Support form elements missing.');
                toastr.error('Internal error. Please refresh the page.');
                return;
            }

            sendMessageButton.disabled = true;
            sendMessageButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sending...';
            form.submit();
        }
    </script>

    <!-- External Scripts -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
</body>
</html>